Describe unite#sources#redpen#detect_config()
    It returns empty string if no configuration is found
        let f = tempname()
        Assert Equals(unite#sources#redpen#detect_config(f), '')
        try
            call writefile([''], f)
            Assert Equals(unite#sources#redpen#detect_config(f), '')
        finally
            call delete(f)
        endtry
    End

    It detects configuration from target file
        let conf = unite#sources#redpen#detect_config('test/assets/a/doc.md')
        Assert Equals(conf, 'test/assets/a/redpen-config.xml')

        let conf = unite#sources#redpen#detect_config('test/assets/b/doc.md')
        Assert Equals(conf, 'redpen-config.xml')
    End

    It detects global configuration file
        let saved = g:unite_redpen_default_config_path
        try
            let g:unite_redpen_default_config_path = 'test/assets/a/redpen-config.xml'
            let conf = unite#sources#redpen#detect_config(tempname())
            Assert Equals(conf, 'test/assets/a/redpen-config.xml')
        finally
            let g:unite_redpen_default_config_path = saved
        endtry
    End

    It does not detect global configuration file if non-existing path is specified
        let saved = g:unite_redpen_default_config_path
        try
            let g:unite_redpen_default_config_path = tempname()
            let conf = unite#sources#redpen#detect_config(tempname())
            Assert Equals(conf, '')
        finally
            let g:unite_redpen_default_config_path = saved
        endtry
    End
End
